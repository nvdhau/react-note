{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","mockup-data/articles.js","components/ArticleList.js","pages/ArticleListPage.js","pages/NotFoundPage.js","components/CommmentList.js","components/UpvoteSection.js","components/AddCommentForm.js","pages/ArticlePage.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","Fragment","AboutPage","articles","name","title","content","ArticleList","key","map","article","className","to","substring","ArticleListPage","NotFoundPage","CommentList","comments","comment","username","text","UpvoteSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","p","NavBar","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b455ff1d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst HomePage = () => (\r\n  <React.Fragment>\r\n    <h1>Hello, Wellcome to my blog!</h1>\r\n    <p>Quo ac, imperdiet sollicitudin, tellus dis dolore bibendum labore incidunt vehicula unde, tincidunt reprehenderit, aute lacus hac? Iusto facere dictumst mollis leo tellus dictumst! Dis convallis porta exercitationem porttitor. Elit? Facilis sint, accumsan maiores itaque potenti voluptates ipsam, natoque, voluptate arcu habitant elit voluptatibus occaecat, impedit metus odio? Tincidunt mollitia unde eligendi commodo rutrum. Adipisicing eu fugit veritatis nostrum proin. Incididunt similique convallis feugiat asperiores exercitationem ullamco reprehenderit voluptates? Rhoncus quasi congue dictum, proin penatibus. Gravida labore vestibulum amet mus! Elementum ornare vulputate aut blanditiis fugit fugit nulla assumenda luctus proident quia eleifend malesuada diamlorem cupidatat! Conubia vulputate, delectus, viverra.</p>\r\n\r\n    <p>Sapien doloribus dolorum adipisci suspendisse officia justo voluptatem, aptent eu mollis fugit nonummy maecenas urna molestias ut auctor sunt iure iusto dapibus, dolore. Do, iusto maxime suspendisse turpis commodi rhoncus, quaerat, turpis, alias, qui augue, dolorem vitae scelerisque aliquip tortor, excepturi ante, donec natoque ea, soluta totam dolor consectetuer sagittis, malesuada laborum at blandit error hendrerit, mauris at, auctor dicta, phasellus aliquid? Repudiandae animi, reiciendis omnis? Habitasse quam condimentum nesciunt! Cillum omnis iaculis velit penatibus? Sem sapien aptent, earum velit libero elementum incididunt unde, cursus ipsum magnis ea aspernatur diamlorem. Ligula nunc aliquip quam nemo! Itaque nonummy tempore provident! Sem.</p>\r\n\r\n    <p>Penatibus facilis veniam sodales! Odio fugit quae tellus, voluptatem? Anim? Nascetur orci deserunt vero ullam eu nesciunt diamlorem a saepe commodo temporibus aliquid porttitor, facere accusamus! Qui litora aptent, parturient nulla do, parturient libero donec? Dictum! Amet cum, posuere incididunt minima nobis, modi risus quis quod doloribus curae cras unde, laboriosam consequatur. Nostrud aute nulla accusantium. Quibusdam sollicitudin dictumst perspiciatis, suspendisse quae explicabo vehicula tempore mollis, tempora nam hendrerit hic gravida sint? Feugiat odio iusto saepe! Integer, morbi accusamus proident, sequi illo aliqua iusto? Sociosqu nesciunt magnis maecenas semper fringilla quam, proin iure perspiciatis nascetur orci, nisl est senectus? Ullamcorper.</p>\r\n  </React.Fragment>\r\n)\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\nconst AboutPage = () => (\r\n  <React.Fragment>\r\n    <h1>About me</h1>\r\n    <p>Quo ac, imperdiet sollicitudin, tellus dis dolore bibendum labore incidunt vehicula unde, tincidunt reprehenderit, aute lacus hac? Iusto facere dictumst mollis leo tellus dictumst! Dis convallis porta exercitationem porttitor. Elit? Facilis sint, accumsan maiores itaque potenti voluptates ipsam, natoque, voluptate arcu habitant elit voluptatibus occaecat, impedit metus odio? Tincidunt mollitia unde eligendi commodo rutrum. Adipisicing eu fugit veritatis nostrum proin. Incididunt similique convallis feugiat asperiores exercitationem ullamco reprehenderit voluptates? Rhoncus quasi congue dictum, proin penatibus. Gravida labore vestibulum amet mus! Elementum ornare vulputate aut blanditiis fugit fugit nulla assumenda luctus proident quia eleifend malesuada diamlorem cupidatat! Conubia vulputate, delectus, viverra.</p>\r\n\r\n    <p>Sapien doloribus dolorum adipisci suspendisse officia justo voluptatem, aptent eu mollis fugit nonummy maecenas urna molestias ut auctor sunt iure iusto dapibus, dolore. Do, iusto maxime suspendisse turpis commodi rhoncus, quaerat, turpis, alias, qui augue, dolorem vitae scelerisque aliquip tortor, excepturi ante, donec natoque ea, soluta totam dolor consectetuer sagittis, malesuada laborum at blandit error hendrerit, mauris at, auctor dicta, phasellus aliquid? Repudiandae animi, reiciendis omnis? Habitasse quam condimentum nesciunt! Cillum omnis iaculis velit penatibus? Sem sapien aptent, earum velit libero elementum incididunt unde, cursus ipsum magnis ea aspernatur diamlorem. Ligula nunc aliquip quam nemo! Itaque nonummy tempore provident! Sem.</p>\r\n\r\n    <p>Penatibus facilis veniam sodales! Odio fugit quae tellus, voluptatem? Anim? Nascetur orci deserunt vero ullam eu nesciunt diamlorem a saepe commodo temporibus aliquid porttitor, facere accusamus! Qui litora aptent, parturient nulla do, parturient libero donec? Dictum! Amet cum, posuere incididunt minima nobis, modi risus quis quod doloribus curae cras unde, laboriosam consequatur. Nostrud aute nulla accusantium. Quibusdam sollicitudin dictumst perspiciatis, suspendisse quae explicabo vehicula tempore mollis, tempora nam hendrerit hic gravida sint? Feugiat odio iusto saepe! Integer, morbi accusamus proident, sequi illo aliqua iusto? Sociosqu nesciunt magnis maecenas semper fringilla quam, proin iure perspiciatis nascetur orci, nisl est senectus? Ullamcorper.</p>\r\n  </React.Fragment>\r\n)\r\n\r\nexport default AboutPage","const articles = [\r\n  {\r\n      name: 'learn-react',\r\n      title: 'The Fastest Way to Learn React',\r\n      content: [\r\n          `Welcome! Today we're going to be talking about the fastest way to\r\n          learn React. We'll be discussing some topics such as proin congue\r\n          ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n          Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n          non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n          eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n          sodales purus euismod.`,\r\n          `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n          `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n      ]\r\n  },    {\r\n      name: 'learn-node',\r\n      title: 'How to Build a Node Server in 10 Minutes',\r\n      content: [\r\n          `In this article, we're going to be talking looking at a very quick way\r\n          to set up a Node.js server. We'll be discussing some topics such as proin congue\r\n          ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n          Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n          non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n          eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n          sodales purus euismod.`,\r\n          `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n          `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n      ]\r\n  },     {\r\n      name: 'my-thoughts-on-resumes',\r\n      title: 'My Thoughts on Resumes',\r\n      content: [\r\n          `Today is the day I talk about something which scares most people: resumes.\r\n          In reality, I'm not sure why people have such a hard time with proin congue\r\n          ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n          Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n          non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n          eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n          sodales purus euismod.`,\r\n          `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n          `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n      ]\r\n  },  \r\n];\r\n\r\nexport default articles;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\n//can reuse this one to display: list of popular articles, recent articles ...\r\nconst ArticleList = ({articles, key}) => {\r\n  //className: is css class\r\n  //must create key for each item in list\r\n  return (\r\n    <React.Fragment>\r\n      {articles.map( (article, key) => (\r\n      <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\r\n        <h3>{article.title}</h3>\r\n        <p>{article.content[0].substring(0, 150)}...</p>\r\n      </Link>\r\n    ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ArticleList;\r\n","import React from 'react'\r\nimport articles from '../mockup-data/articles'; \r\nimport ArticleList from '../components/ArticleList'\r\n\r\nconst ArticleListPage = () => (\r\n  //{articles} : mock-up articles, while 'articles=' is prop name\r\n  <React.Fragment>\r\n    <h1>Articles</h1>\r\n    <ArticleList articles={articles}/>\r\n  </React.Fragment>\r\n)\r\n\r\nexport default ArticleListPage","import React from 'react'\r\n\r\nconst NotFoundPage = () =>{\r\n  return (\r\n    <h1>404: Page Not Found</h1>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\n\r\nconst CommentList = ({comments}) => (\r\n  <React.Fragment>\r\n    <h3>Comments:</h3>\r\n    {comments.map( (comment, key) => {\r\n      return (\r\n      <div className=\"comment\" key={key}>\r\n        <h4>{comment.username}</h4>\r\n        <p>{comment.text}</p>\r\n      </div>\r\n    )})}\r\n  </React.Fragment>\r\n)\r\nexport default CommentList","import React from 'react'\r\n\r\nconst UpvoteSection = ({articleName, upvotes, setArticleInfo}) => {\r\n  \r\n  const upvoteArticle = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n      method: 'post'\r\n    });\r\n    const body = await result.json();\r\n\r\n    setArticleInfo(body);\r\n  }\r\n\r\n  return (\r\n  <div id=\"upvotes-section\">\r\n    <button onClick={() => upvoteArticle()}>Add Upvote</button>\r\n    <p>This post has been upvotes {upvotes} times</p>\r\n  </div>\r\n  )\r\n};\r\nexport default UpvoteSection;","import React,\r\n{useState}\r\nfrom 'react'\r\n\r\nconst AddCommentForm = ({articleName, setArticleInfo}) => {\r\n\r\n  //define state\r\n  const [username, setUsername] = useState('')\r\n  const [commentText, setCommentText] = useState('')\r\n\r\n  const addComment = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({username, text: commentText}),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const body = await result.json()\r\n    setArticleInfo(body)\r\n    setUsername('')\r\n    setCommentText('')\r\n  }\r\n\r\n  return (\r\n    <div id=\"add-comment-form\">\r\n      <h3>Add a Comment</h3>\r\n      <label>Name: <input type=\"text\" value={username} \r\n        onChange={(event) => setUsername(event.target.value)}/></label>\r\n      <label>Comment: <textarea rows=\"4\" cols=\"50\" value={commentText} \r\n        onChange={(event) => setCommentText(event.target.value)}/></label>\r\n      <button onClick={() => addComment()}>Add Comment</button>\r\n    </div>\r\n  )\r\n}\r\nexport default AddCommentForm;","import React, \r\n  {useState, useEffect} //React Hook\r\n  from 'react'\r\nimport articles from '../mockup-data/articles'\r\nimport ArticleList from '../components/ArticleList'\r\nimport NotFoundPage from '../pages/NotFoundPage'\r\nimport CommentList from '../components/CommmentList'\r\nimport UpvoteSection from '../components/UpvoteSection'\r\nimport AddCommentForm from '../components/AddCommentForm'\r\n\r\nconst ArticlePage = ({match}) => {\r\n\r\n  const name = match.params.name;//get url params name\r\n  const article = articles.find(a => a.name === name);\r\n\r\n  //articleInfo is a state with initial value is {upvotes: 0, comments: []}\r\n  //setArticleInfo is function to change articleInfo state\r\n  const [articleInfo, setArticleInfo] = useState({upvotes: 0, comments: []});\r\n\r\n  //contain function that be called when component first mounted and component is changed\r\n  useEffect(() => {\r\n    // setArticleInfo({upvotes: 3})\r\n    // setArticleInfo({upvotes: Math.ceil(Math.random() * 10)})\r\n\r\n    //because useEffect cannot define as async\r\n    const fetchData = async () => {\r\n      const result = await fetch(`/api/articles/${name}`);\r\n      const body = await result.json();\r\n\r\n      setArticleInfo(body)\r\n    }\r\n\r\n    fetchData();\r\n  //}, []) //[] => ensure run only 1 time when component first mounted, so no update\r\n  }, [name]) // use name because it change when page load\r\n\r\n  if(!article) return <NotFoundPage />\r\n\r\n  const otherArticles = articles.filter(a => a.name !== name)\r\n\r\n  return (\r\n  <React.Fragment>\r\n    <h1>{article.title}</h1>\r\n    <UpvoteSection articleName={name} upvotes={articleInfo.upvotes}  setArticleInfo={setArticleInfo} />\r\n    {article.content.map((p, key) => (\r\n      <p key={key}>{p}</p>\r\n    ))}\r\n    <CommentList comments={articleInfo.comments} />\r\n    <AddCommentForm articleName={name}  setArticleInfo={setArticleInfo} />\r\n    <h3>Other Articles:</h3>\r\n    <ArticleList articles={otherArticles} />\r\n  </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ArticlePage","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst NavBar = () => (\r\n\r\n  // cannot use <a> tag, use <Link> component from React Router \r\n  <nav>\r\n    <ul>\r\n      <li><Link to=\"/\">Home</Link></li>\r\n      <li><Link to=\"/about\">About</Link></li>\r\n      <li><Link to=\"/article-list\">Articles</Link></li>\r\n    </ul>\r\n  </nav>\r\n\r\n);\r\n\r\nexport default NavBar","import React from 'react';\nimport {\n  BrowserRouter as Router, \n  Route,\n  Switch\n} from 'react-router-dom'\nimport './App.css';\nimport HomePage from './pages/HomePage'\nimport AboutPage from './pages/AboutPage'\nimport ArticleListPage from './pages/ArticleListPage'\nimport ArticlePage from './pages/ArticlePage'\nimport NavBar from './components/NavBar';\nimport NotFoundPage from './pages/NotFoundPage'\n\nfunction App() {\n  return (\n    //exact: exact path\n    //name: url parameter, will be passed to component ArticlePage (match.params.name)\n    //REACT display all content if a route is match e.g. route without path will be display all the time\n    // => use Switch in react-router-dom, only return content of one route\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div id =\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact/>\n            <Route path=\"/about\" component={AboutPage}/>\n            <Route path=\"/article-list\" component={ArticleListPage}/>\n            <Route path=\"/article/:name\" component={ArticlePage}/>\n            <Route component={NotFoundPage}/>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}